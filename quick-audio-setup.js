const fs = require('fs');
const path = require('path');

// Audio content for each language
const audioContent = {
  languagePrompt: {
    english: "Select language: Press 1 for English, 2 for Hindi, 3 for Tamil, 4 for Kannada.",
    hindi: "рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ: рдЕрдВрдЧреНрд░реЗрдЬреА рдХреЗ рд▓рд┐рдП 1 рджрдмрд╛рдПрдВ, рд╣рд┐рдВрджреА рдХреЗ рд▓рд┐рдП 2, рддрдорд┐рд▓ рдХреЗ рд▓рд┐рдП 3, рдХрдиреНрдирдбрд╝ рдХреЗ рд▓рд┐рдП 4 рджрдмрд╛рдПрдВред",
    tamil: "роорпКро┤ро┐ропрпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН: роЖроЩрпНроХро┐ро▓родрпНродро┐ро▒рпНроХрпБ 1 роЕро┤рпБродрпНродро╡рпБроорпН, роЗроирпНродро┐роХрпНроХрпБ 2, родрооро┐ро┤рпБроХрпНроХрпБ 3, роХройрпНройроЯродрпНродро┐ро▒рпНроХрпБ 4 роЕро┤рпБродрпНродро╡рпБроорпН.",
    kannada: "р▓нр▓╛р▓╖р│Жр▓пр▓ир│Нр▓ир│Б р▓Жр▓пр│Нр▓Хр│Жр▓ор▓╛р▓бр▓┐: р▓Зр▓Вр▓Чр│Нр▓▓р▓┐р▓╖р│НтАМр▓Чр▓╛р▓Чр▓┐ 1 р▓Тр▓др│Нр▓др▓┐, р▓╣р▓┐р▓Вр▓жр▓┐р▓Чр▓╛р▓Чр▓┐ 2, р▓др▓ор▓┐р▓│р▓┐р▓Чр▓╛р▓Чр▓┐ 3, р▓Хр▓ир│Нр▓ир▓бр▓Хр│Нр▓Хр▓╛р▓Чр▓┐ 4 р▓Тр▓др│Нр▓др▓┐."
  },
  enterNumber: {
    english: "Enter your waste management number using the keypad.",
    hindi: "рдХреАрдкреИрдб рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рдХреЗ рдЕрдкрдирд╛ рдХрдЪрд░рд╛ рдкреНрд░рдмрдВрдзрди рдирдВрдмрд░ рджрд░реНрдЬ рдХрд░реЗрдВред",
    tamil: "роХрпАрокро╛роЯрпН рокропройрпНрокроЯрпБродрпНродро┐ роЙроЩрпНроХро│рпН роХро┤ро┐ро╡рпБ роорпЗро▓ро╛рогрпНроорпИ роОрогрпНрогрпИ роЙро│рпНро│ро┐роЯро╡рпБроорпН.",
    kannada: "р▓Хр│Ар▓кр│Нр▓пр▓╛р▓бр│Н р▓мр▓│р▓╕р▓┐ р▓ир▓┐р▓ор│Нр▓о р▓др│Нр▓пр▓╛р▓Ьр│Нр▓п р▓ир▓┐р▓░р│Нр▓╡р▓╣р▓гр│Ж р▓╕р▓Вр▓Цр│Нр▓пр│Жр▓пр▓ир│Нр▓ир│Б р▓ир▓ор│Вр▓жр▓┐р▓╕р▓┐."
  },
  ratingPrompt: {
    english: "Rate our service: Press 1 for poor, 2 for fair, 3 for good, 4 for very good, 5 for excellent.",
    hindi: "рд╣рдорд╛рд░реА рд╕реЗрд╡рд╛ рдХрд╛ рдореВрд▓реНрдпрд╛рдВрдХрди рдХрд░реЗрдВ: рдЦрд░рд╛рдм рдХреЗ рд▓рд┐рдП 1, рд╕рд╛рдорд╛рдиреНрдп рдХреЗ рд▓рд┐рдП 2, рдЕрдЪреНрдЫрд╛ рдХреЗ рд▓рд┐рдП 3, рдмрд╣реБрдд рдЕрдЪреНрдЫрд╛ рдХреЗ рд▓рд┐рдП 4, рдЙрддреНрдХреГрд╖реНрдЯ рдХреЗ рд▓рд┐рдП 5 рджрдмрд╛рдПрдВред",
    tamil: "роОроЩрпНроХро│рпН роЪрпЗро╡рпИропрпИ роородро┐рокрпНрокро┐роЯрпБроЩрпНроХро│рпН: роорпЛроЪрооро╛ройродро▒рпНроХрпБ 1, роироЯрпБродрпНродро░родрпНродро┐ро▒рпНроХрпБ 2, роиро▓рпНро▓родро▒рпНроХрпБ 3, рооро┐роХро╡рпБроорпН роиро▓рпНро▓родро▒рпНроХрпБ 4, роЪро┐ро▒роирпНродродро▒рпНроХрпБ 5 роЕро┤рпБродрпНродро╡рпБроорпН.",
    kannada: "р▓ир▓ор│Нр▓о р▓╕р│Зр▓╡р│Жр▓пр▓ир│Нр▓ир│Б р▓░р│Зр▓Яр│Н р▓ор▓╛р▓бр▓┐: р▓Хр▓│р▓кр│Жр▓Чр▓╛р▓Чр▓┐ 1, р▓╕р▓╛р▓зр▓╛р▓░р▓гр▓Хр│Нр▓Хр▓╛р▓Чр▓┐ 2, р▓Йр▓др│Нр▓др▓ор▓Хр│Нр▓Хр▓╛р▓Чр▓┐ 3, р▓др│Бр▓Вр▓мр▓╛ р▓Йр▓др│Нр▓др▓ор▓Хр│Нр▓Хр▓╛р▓Чр▓┐ 4, р▓Ер▓др│Нр▓пр│Бр▓др│Нр▓др▓ор▓Хр│Нр▓Хр▓╛р▓Чр▓┐ 5 р▓Тр▓др│Нр▓др▓┐."
  },
  thankYou: {
    english: "Thank you for your feedback. Your response is important to us. Thank you for using Waste Management Services.",
    hindi: "рдЖрдкрдХреА рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛ рдХреЗ рд▓рд┐рдП рдзрдиреНрдпрд╡рд╛рджред рдЖрдкрдХреА рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛ рд╣рдорд╛рд░реЗ рд▓рд┐рдП рдорд╣рддреНрд╡рдкреВрд░реНрдг рд╣реИред рдХрдЪрд░рд╛ рдкреНрд░рдмрдВрдзрди рд╕реЗрд╡рд╛рдУрдВ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдзрдиреНрдпрд╡рд╛рджред",
    tamil: "роЙроЩрпНроХро│рпН роХро░рпБродрпНродрпБроХрпНроХрпБ роиройрпНро▒ро┐. роЙроЩрпНроХро│рпН рокродро┐ро▓рпН роОроЩрпНроХро│рпБроХрпНроХрпБ роорпБроХрпНроХро┐ропрооро╛ройродрпБ. роХро┤ро┐ро╡рпБ роорпЗро▓ро╛рогрпНроорпИ роЪрпЗро╡рпИроХро│рпИрокрпН рокропройрпНрокроЯрпБродрпНродро┐ропродро▒рпНроХрпБ роиройрпНро▒ро┐.",
    kannada: "р▓ир▓┐р▓ор│Нр▓о р▓кр│Нр▓░р▓др▓┐р▓Хр│Нр▓░р▓┐р▓пр│Жр▓Чр│Ж р▓зр▓ир│Нр▓пр▓╡р▓╛р▓жр▓Чр▓│р│Б. р▓ир▓┐р▓ор│Нр▓о р▓кр│Нр▓░р▓др▓┐р▓Хр│Нр▓░р▓┐р▓пр│Ж р▓ир▓ор▓Чр│Ж р▓ор│Бр▓Цр│Нр▓пр▓╡р▓╛р▓Чр▓┐р▓жр│Ж. р▓др│Нр▓пр▓╛р▓Ьр│Нр▓п р▓ир▓┐р▓░р│Нр▓╡р▓╣р▓гр│Ж р▓╕р│Зр▓╡р│Жр▓Чр▓│р▓ир│Нр▓ир│Б р▓мр▓│р▓╕р▓┐р▓жр│Нр▓жр▓Хр│Нр▓Хр│Ж р▓зр▓ир│Нр▓пр▓╡р▓╛р▓жр▓Чр▓│р│Б."
  }
};

// Create audio directory if it doesn't exist
const audioDir = path.join(__dirname, 'audio');
if (!fs.existsSync(audioDir)) {
  fs.mkdirSync(audioDir);
}

// Generate text files with content for manual TTS generation
function generateTextFiles() {
  console.log('ЁЯУЭ Generating text files for manual TTS generation...\n');
  
  let fileCount = 0;
  
  for (const [promptType, languages] of Object.entries(audioContent)) {
    for (const [language, text] of Object.entries(languages)) {
      const filename = `${promptType}-${language}.txt`;
      const filePath = path.join(audioDir, filename);
      
      fs.writeFileSync(filePath, text, 'utf8');
      console.log(`тЬЕ Created: ${filename}`);
      fileCount++;
    }
  }
  
  return fileCount;
}

// Generate instructions file
function generateInstructions() {
  const instructions = `
# ЁЯОЩя╕П Quick Audio Generation Instructions

## ЁЯЪА Method 1: Free Online TTS Services

### Step 1: Use Google Translate TTS
1. Go to https://translate.google.com
2. Select the target language (Hindi, Tamil, Kannada)
3. Copy the text from the generated .txt files
4. Paste in Google Translate
5. Click the speaker icon to hear pronunciation
6. Use browser extension or screen recorder to capture audio

### Step 2: Use Microsoft Edge TTS
1. Open Microsoft Edge browser
2. Go to any webpage
3. Right-click and select "Read aloud"
4. Change voice to Hindi, Tamil, or Kannada
5. Copy text from .txt files and paste in browser
6. Record the audio output

### Step 3: Use Online TTS Tools
- **Natural Reader**: https://www.naturalreaders.com
- **Text2Speech**: https://text2speech.org
- **iSpeech**: https://www.ispeech.org

## ЁЯОп Method 2: Mobile Apps
- **Google Translate App**: Has excellent TTS for Indian languages
- **Microsoft Translator**: Good quality TTS
- **Voice Aloud Reader**: Android app with multiple languages

## ЁЯУБ Required Audio Files
You need to generate these MP3 files:

### Language Selection Prompts:
- language-prompt-english.mp3
- language-prompt-hindi.mp3
- language-prompt-tamil.mp3
- language-prompt-kannada.mp3

### Enter Number Prompts:
- enter-number-english.mp3
- enter-number-hindi.mp3
- enter-number-tamil.mp3
- enter-number-kannada.mp3

### Rating Prompts:
- rating-prompt-english.mp3
- rating-prompt-hindi.mp3
- rating-prompt-tamil.mp3
- rating-prompt-kannada.mp3

### Thank You Messages:
- thank-you-english.mp3
- thank-you-hindi.mp3
- thank-you-tamil.mp3
- thank-you-kannada.mp3

## ЁЯМР Hosting Options

### Option 1: GitHub Pages (Free)
1. Create a GitHub repository
2. Upload audio files
3. Enable GitHub Pages
4. Use URLs like: https://yourusername.github.io/repo/filename.mp3

### Option 2: Netlify (Free)
1. Create a Netlify account
2. Upload audio files
3. Get public URLs

### Option 3: AWS S3 (Free tier)
1. Create S3 bucket
2. Upload files
3. Make public
4. Use URLs like: https://bucket-name.s3.amazonaws.com/filename.mp3

## ЁЯФз Next Steps
1. Generate all 16 audio files
2. Host them online
3. Update URLs in server-simple.js
4. Test your IVR!

## ЁЯТб Tips
- Keep audio files under 10 seconds each
- Use MP3 format for compatibility
- Test audio quality on phone calls
- Ensure HTTPS URLs for Twilio compatibility
`;

  const instructionsPath = path.join(__dirname, 'AUDIO-GENERATION-INSTRUCTIONS.md');
  fs.writeFileSync(instructionsPath, instructions, 'utf8');
  console.log('ЁЯУЛ Created: AUDIO-GENERATION-INSTRUCTIONS.md');
}

// Generate sample URLs for testing
function generateSampleUrls() {
  const sampleUrls = {
    languagePrompt: {
      english: 'https://example.com/audio/language-prompt-english.mp3',
      hindi: 'https://example.com/audio/language-prompt-hindi.mp3',
      tamil: 'https://example.com/audio/language-prompt-tamil.mp3',
      kannada: 'https://example.com/audio/language-prompt-kannada.mp3'
    },
    enterNumber: {
      english: 'https://example.com/audio/enter-number-english.mp3',
      hindi: 'https://example.com/audio/enter-number-hindi.mp3',
      tamil: 'https://example.com/audio/enter-number-tamil.mp3',
      kannada: 'https://example.com/audio/enter-number-kannada.mp3'
    },
    ratingPrompt: {
      english: 'https://example.com/audio/rating-prompt-english.mp3',
      hindi: 'https://example.com/audio/rating-prompt-hindi.mp3',
      tamil: 'https://example.com/audio/rating-prompt-tamil.mp3',
      kannada: 'https://example.com/audio/rating-prompt-kannada.mp3'
    },
    thankYou: {
      english: 'https://example.com/audio/thank-you-english.mp3',
      hindi: 'https://example.com/audio/thank-you-hindi.mp3',
      tamil: 'https://example.com/audio/thank-you-tamil.mp3',
      kannada: 'https://example.com/audio/thank-you-kannada.mp3'
    }
  };

  const sampleUrlsPath = path.join(__dirname, 'sample-audio-urls.json');
  fs.writeFileSync(sampleUrlsPath, JSON.stringify(sampleUrls, null, 2), 'utf8');
  console.log('ЁЯФЧ Created: sample-audio-urls.json');
  
  return sampleUrls;
}

// Main function
function main() {
  console.log('ЁЯЪА Setting up quick audio generation...\n');
  
  const fileCount = generateTextFiles();
  generateInstructions();
  const sampleUrls = generateSampleUrls();
  
  console.log(`\nЁЯУК Summary:`);
  console.log(`тЬЕ Generated ${fileCount} text files in /audio directory`);
  console.log(`ЁЯУЛ Created detailed instructions`);
  console.log(`ЁЯФЧ Created sample URL structure`);
  
  console.log('\nЁЯОп Next Steps:');
  console.log('1. Check the /audio folder for text files');
  console.log('2. Read AUDIO-GENERATION-INSTRUCTIONS.md for detailed steps');
  console.log('3. Use free online TTS services to generate audio files');
  console.log('4. Host audio files online');
  console.log('5. Update URLs in server-simple.js');
  console.log('6. Test your native language IVR!');
  
  console.log('\nЁЯТб Quick Start:');
  console.log('- Go to https://translate.google.com');
  console.log('- Copy text from audio/*.txt files');
  console.log('- Generate audio using Google Translate TTS');
  console.log('- Save as MP3 files with the same names');
}

if (require.main === module) {
  main();
}

module.exports = { audioContent, generateTextFiles, generateInstructions }; 